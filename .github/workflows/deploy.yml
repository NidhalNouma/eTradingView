name: django CI

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2

      - name: Create secrets file
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> .env
          echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> .env
          echo "STRIPE_API_KEY=${{ secrets.STRIPE_API_KEY }}" >> .env
          echo "STRIPE_API_PUBLIC_KEY=${{ secrets.STRIPE_API_PUBLIC_KEY }}" >> .env
          echo "STRIPE_PRICE_MN_ID=${{ secrets.STRIPE_PRICE_MN_ID }}" >> .env
          echo "STRIPE_PRICE_6MN_ID=${{ secrets.STRIPE_PRICE_6MN_ID }}" >> .env
          echo "STRIPE_PRICE_Y_ID=${{ secrets.STRIPE_PRICE_Y_ID }}" >> .env
          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" >> .env
          echo "DATABASE_PASS=${{ secrets.DATABASE_PASS }}" >> .env

      - run: mv .env ./etradingview/settings
      - run: sudo docker rmi --force $(docker images -q 'isalgo' | uniq) || echo "No isalgo image founddd"
      - run: sudo docker stop isalgo_run || echo "No isalgo run container founddd to stop"
      - run: sudo docker rm isalgo_run || echo "No isalgo run container founddd to remove"
      - run: sudo docker build --progress=plain --no-cache --tag isalgo .
      - run: sudo docker run -d --name isalgo_run --publish 80:8000 isalgo
      - run: rm ./etradingview/settings/.env